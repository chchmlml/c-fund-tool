<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.haicheng.cfundtool.mapper.StockMapper">
  <resultMap id="BaseResultMap" type="io.haicheng.cfundtool.pojo.Stock">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="name" property="name" jdbcType="VARCHAR"/>
    <result column="code" property="code" jdbcType="VARCHAR"/>
    <result column="industry_code" property="industryCode" jdbcType="VARCHAR"/>
    <result column="industry_name" property="industryName" jdbcType="VARCHAR"/>
    <result column="pe_dynamic" property="peDynamic" jdbcType="DOUBLE"/>
    <result column="pe_lyr" property="peLyr" jdbcType="DOUBLE"/>
    <result column="pe_ttm" property="peTtm" jdbcType="DOUBLE"/>
    <result column="pb" property="pb" jdbcType="DOUBLE"/>
    <result column="netprofit" property="netprofit" jdbcType="DOUBLE"/>
  </resultMap>

  <select id="getStockList" resultMap="BaseResultMap">
    SELECT id, `name`, `code`, `industry_code`, `industry_name`, `pe_dynamic`, `pe_lyr`, `pe_ttm`, `pb`, `netprofit`
    FROM
    stock WHERE 1=1
    <if test="name != null and name != ''">
      AND `stock`.name LIKE CONCAT('%', #{name} ,'%')
    </if>
    <if test="code != null and code != ''">
      AND `stock`.code LIKE CONCAT('%', #{code} ,'%')
    </if>
    <if test="industryName != null and industryName != ''">
      AND `stock`.industry_name = #{industryName}
    </if>
    <if test="profit != null and profit == true">
      AND `stock`.netprofit > 0 AND pb > 0 AND pe_ttm > 0
    </if>
    <if test="st != null and st == true">
      AND `stock`.name NOT LIKE '%ST%'
    </if>
    <if test="onlySh != null and onlySh == true">
      AND `stock`.code LIKE 'SH%'
    </if>
    ORDER BY CONVERT(`${sort}`,SIGNED) ${order}
    LIMIT #{offSet}, #{pageRow}
  </select>

  <select id="getStockCount" resultType="java.lang.Integer">
    SELECT count(*) FROM
    stock WHERE 1=1
    <if test="name != null and name != ''">
      AND `stock`.name LIKE CONCAT('%', #{name} ,'%')
    </if>
    <if test="code != null and code != ''">
      AND `stock`.code LIKE CONCAT('%', #{code} ,'%')
    </if>
    <if test="industryName != null and industryName != ''">
      AND `stock`.industry_name = #{industryName}
    </if>
    <if test="profit != null and profit == true">
      AND `stock`.netprofit > 0 AND pb > 0 AND pe_ttm > 0
    </if>
    <if test="st != null and st == true">
      AND `stock`.name NOT LIKE '%ST%'
    </if>
    <if test="onlySh != null and onlySh == true">
      AND `stock`.code LIKE 'SH%'
    </if>
  </select>

  <select id="getStockIndustryList" resultType="java.lang.String">
    SELECT DISTINCT(`industry_name`) AS industry_name FROM stock
    <where>
      <if test="name != null and name != ''">
        `stock`.industry_name LIKE CONCAT('%', #{name} ,'%')
      </if>
    </where>
  </select>

  <select id="getIndustryList" resultType="java.util.HashMap">
    SELECT
    ANY_VALUE(`id`) AS `id`,
    industry_name,
    COUNT(industry_name) as acount,
    FORMAT(SUM(pe_ttm)/COUNT(industry_name), 2) AS pe_ttm ,
    FORMAT(SUM(pe_lyr)/COUNT(industry_name), 2) AS pe_lyr ,
    FORMAT(SUM(pb)/COUNT(industry_name), 2) AS pb
    FROM stock WHERE 1=1
    <if test="profit != null and profit == true">
      AND `stock`.netprofit > 0 AND pb > 0 AND pe_ttm > 0
    </if>
    <if test="st != null and st == true">
      AND `stock`.name NOT LIKE '%ST%'
    </if>
    <if test="onlySh != null and onlySh == true">
      AND `stock`.code LIKE 'SH%'
    </if>
    GROUP BY `industry_name`
    <if test="industryName != null and industryName != ''">
      HAVING `stock`.industry_name = #{industryName}
    </if>
    ORDER BY ${sort} ${order}
    LIMIT #{offSet}, #{pageRow}
  </select>

  <select id="getIndustryCount" resultType="java.lang.Integer">
    SELECT
    COUNT(*)
    FROM (
    SELECT COUNT(*) FROM stock WHERE 1=1
    <if test="profit != null and profit == true">
      AND `stock`.netprofit > 0 AND pb > 0 AND pe_ttm > 0
    </if>
    <if test="st != null and st == true">
      AND `stock`.name NOT LIKE '%ST%'
    </if>
    <if test="onlySh != null and onlySh == true">
      AND `stock`.code LIKE 'SH%'
    </if>
    GROUP BY `industry_name`
    <if test="industryName != null and industryName != ''">
      HAVING `stock`.industry_name = #{industryName}
    </if>
    ) u
  </select>

  <insert id="saveStock" useGeneratedKeys="true" keyProperty="id"
    parameterType="io.haicheng.cfundtool.pojo.Stock">
        INSERT INTO stock
        (`name`, `code`, `industry_code`,  `industry_name`,  `pe_dynamic`,  `pe_lyr`,  `pe_ttm`,  `pb`, `netprofit`)
        VALUES (#{name}, #{code},#{industryCode},  #{industryName}, #{peDynamic}, #{peLyr},#{peTtm},  #{pb}, #{netprofit})
    </insert>

  <update id="updateStock" parameterType="io.haicheng.cfundtool.pojo.Stock">
    UPDATE stock
    <set>
      <if test="name != '' and name != null">
        `name` = #{name},
      </if>
      <if test="code != '' and code != null">
        code = #{code},
      </if>
      <if test="industryCode != '' and industryCode != null">
        industry_code = #{industryCode},
      </if>
      <if test="industryName != '' and industryName != null">
        industry_name = #{industryName},
      </if>
      <if test="peDynamic != '' and peDynamic != null">
        pe_dynamic = #{peDynamic},
      </if>
      <if test="peLyr != '' and peLyr != null">
        pe_lyr = #{peLyr},
      </if>
      <if test="peTtm != '' and peTtm != null">
        pe_ttm = #{peTtm},
      </if>
      <if test="pb != '' and pb != null">
        pb = #{pb},
      </if>
      <if test="netprofit != '' and netprofit != null">
        netprofit = #{netprofit},
      </if>
    </set>
    WHERE id = #{id}
  </update>

  <select id="getStockByCode" resultMap="BaseResultMap">
        SELECT id,`name`, `code`, `industry_code`,  `industry_name`,  `pe_dynamic`,  `pe_lyr`,  `pe_ttm`,  `pb`,`netprofit` FROM
            stock
        WHERE
            code = #{code}
        LIMIT 1
    </select>
</mapper>